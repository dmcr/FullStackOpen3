{"version":3,"sources":["components/Filter.js","components/Number.js","components/Numbers.js","components/NewContact.js","services/Phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","Number","person","deletePerson","name","number","onClick","id","Numbers","persons","map","key","NewContact","newPerson","handleNewNameChange","handleNewNumberChange","addPerson","onSubmit","type","baseUrl","axios","get","then","response","data","post","delete","updatedPerson","put","Notification","message","className","style","App","age","useState","setPersons","setNewPerson","setFilter","setMessage","useEffect","phonebookService","initialPersons","updatePerson","personToUpdate","window","confirm","returnedPerson","color","fontStyle","fontSize","setTimeout","catch","error","event","target","preventDefault","length","concat","success","toLowerCase","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1defb73.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return (\r\n        <div>\r\n        <h1>Phonebook</h1>\r\n        filter: <input value={filter} onChange={handleFilter} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Number = ({person, deletePerson}) => {\r\n    return (\r\n        <li>{person.name} {person.number} <button onClick={() => deletePerson(person.id)} >Delete</button></li>\r\n    )\r\n}\r\n\r\nexport default Number","import React from 'react'\r\nimport Number from './Number'\r\n\r\nconst Numbers = ({persons, deletePerson}) => {  \r\n    return (\r\n        <div>\r\n            <h1>Numbers</h1>\r\n            <ul>\r\n                {persons.map(person => <Number key={person.name} person={person} deletePerson={deletePerson} />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Numbers","import React from 'react'\r\n\r\nconst NewContact = ({newPerson, handleNewNameChange, handleNewNumberChange, addPerson}) => {\r\n    return (\r\n        <div>\r\n            <h2>add a new contact</h2>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input \r\n                        value={newPerson.name}\r\n                        onChange={handleNewNameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    number: <input \r\n                        value={newPerson.number || ''}\r\n                        onChange={handleNewNumberChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewContact","import axios from 'axios'\r\n\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n//const baseUrl = 'https://fso-phonebook.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = updatedPerson => {\r\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, id)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    \r\n    return (\r\n        <div className=\"error\" style={message.style} >\r\n            {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react';\r\nimport Filter from './components/Filter'\r\nimport Numbers from './components/Numbers'\r\nimport NewContact from './components/NewContact'\r\nimport phonebookService from './services/Phonebook'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const person = {name: '',age: ''}\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newPerson, setNewPerson ] = useState(person)\r\n  const [ filter, setFilter] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    phonebookService.getAll().then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personToUpdate = persons.filter(person => person.name === newPerson.name)\r\n    if(personToUpdate.length > 0) {\r\n      updatePerson({...personToUpdate[0], number : newPerson.number})\r\n    }\r\n    else {\r\n      phonebookService.create(newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setMessage({\r\n          message: `Added ${returnedPerson.name}`,\r\n          style: {\r\n            color: 'green',\r\n            fontStyle: 'italic',\r\n            fontSize: 25\r\n          }\r\n        })\r\n        setTimeout(() =>{ setMessage(null)}, 5000)\r\n        setNewPerson(person)\r\n      })\r\n    }\r\n  }\r\n\r\n  const updatePerson = (personToUpdate) => {\r\n    if (window.confirm(\"Person already exists, would you like to update their number?\")) {\r\n      phonebookService.update(personToUpdate)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.map(person => \r\n          person.id !== returnedPerson.id ? person : returnedPerson))\r\n          setMessage({\r\n            message: `Updated ${returnedPerson.name}`,\r\n            style: {\r\n              color: 'green',\r\n              fontStyle: 'italic',\r\n              fontSize: 25\r\n            }\r\n          })\r\n          setTimeout(() =>{ setMessage(null)}, 5000)\r\n          setNewPerson(person)\r\n        })\r\n      .catch(error => {\r\n        setMessage({\r\n          message: `Error ${personToUpdate.name} does not exist`,\r\n            style: {\r\n              color: 'red',\r\n              fontStyle: 'italic',\r\n              fontSize: 25\r\n            }\r\n        })\r\n        setTimeout(() =>{ setMessage(null)}, 5000)\r\n        setPersons(persons.filter(person => person.id !== personToUpdate.id))\r\n      })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this person?\")) {\r\n      phonebookService.remove(id)\r\n      .then(success => { \r\n        setPersons(persons.filter(person => person.id !== id))\r\n        setMessage({\r\n          message: `Deleted`,\r\n          style: {\r\n            color: 'red',\r\n            fontStyle: 'italic',\r\n            fontSize: 25\r\n          }\r\n        })\r\n        setTimeout(() =>{ setMessage(null)}, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNewNameChange = event => setNewPerson({name: event.target.value, number: newPerson.number})\r\n  const handleNewNumberChange = event => setNewPerson({name: newPerson.name, number: event.target.value})\r\n  const handleFilter = event => setFilter(event.target.value)\r\n  const getFilteredPersons = () => persons.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase())>-1)\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} />\r\n      <Filter filter={filter} handleFilter={handleFilter} />\r\n      <NewContact newPerson={newPerson} handleNewNameChange={handleNewNameChange} handleNewNumberChange={handleNewNumberChange} addPerson={addPerson} />\r\n      <Numbers deletePerson={deletePerson} persons={getFilteredPersons()}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}